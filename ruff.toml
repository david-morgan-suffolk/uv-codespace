line-length = 88
indent-width = 4
target-version = "py312"
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    ".cache"
]

[lint]
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # Doctstring set to multiline
    "D201",
    # Docstring blank line
    "D213",
    # Missing punctionation docstring
    "D415",
    # Blank lines in docstring for function
    "D201",
    # Blank lines after docstring for class
    "D202",
    ]
ignore = [
    "COM812",
    "COM819",
    "D100",
    "D203",
    "D213",
    "D300",
    "E111",
    "E114",
    "E117",
    "ISC001",
    "ISC002",
    "Q000",
    "Q001",
    "Q002",
    "Q003",
    "W191",
    "D401",
    "D107",
    "D106",
    "D101",
    "D103",
    "D107",
    "D102",
    "TRY400",
    "ERA001",
    "E203", # ignoring to fix line to longs
    "E501"
]
fixable = ["ALL"]
unfixable = []



[lint.pydocstyle]
convention = "google"

[format]
quote-style = "double"
docstring-code-format = true
docstring-code-line-length = 30
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[lint.per-file-ignores]
"tests/**" = ["INP001", "S101"]